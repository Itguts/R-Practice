## parse_number extracts the first continous digit
weather.c <- spread(weather.b ,key = element, value=value)
weather.c
## tidying the tb data
tb <- read.csv("D:\\Study\\R\\WorkingDirectory\\tb-untidy.csv", stringsAsFactors = F)
tb
tb <- as.tibble(tb)
tb
tb.a <- tb %>%
gather(m04:f65, key = "column", value = "cases", na.rm = T) %>%
arrange(country)
tb.a
tb.b <- separate(tb.a,col = column, into  = c("sex", "age"))
tb.b
tb.b <- separate(tb.a,col = column, into  = c("sex", "age"))
tb.b
###
tb <- read.csv("D:\\Study\\R\\WorkingDirectory\\tb-untidy.csv", stringsAsFactors = FALSE)
tb <- as.tibble(tb)
tb
names(tb)
names(tb) <- str_replace(names(tb), "new_sp_", "")
names(tb) <- str_replace(names(tb), "m", "m.")
names(tb) <- str_replace(names(tb), "f", "f.")
tb
tb$m.04 <- NULL
tb
tb$m.514 <- NULL
tb$f.04 <- NULL
tb$f.514 <- NULL
tb$m.u <- NULL
tb$f.u <- NULL
tb
tb.a <- tb %>% gather(m.014:f.65, key = "column", value = "cases", na.rm = TRUE) %>% arrange(country)
tb.b <- tb.a %>% separate(column, into = c("sex", "age"))
tb.b
###ggplot2. dplyr
library(tidyverse)
hdi <- read.csv("D:\\Study\\R\\WorkingDirectory\\hdi-cpi.csv", stringsAsFactors = F)
hdi <- as.tibble(hdi)
hdi
sc <- ggplot(hdi)
sc <- ggplot(hdi, aes(CPI.2015, HDI.2015))
sc
sc + geom_point()
sc + geom_point() + facet_grid(Region ~.)
# apply statitics- (Tranforming and summarizing the data)
sc + geom_point(aes(color = Region), size=3) + facet_grid(Region ~.) + stat_smooth()
sc + geom_point() + facet_grid(Region ~.)
# apply statitics- (Tranforming and summarizing the data)
sc + geom_point(aes(color = Region), size=3) + facet_grid(Region ~.) + stat_smooth()
# Cooridinates -specifying the dimension of a graph(Zooming in - out)
# eg:-see the only countries in the upper limit of crime index(CPI)
sc + geom_point(aes(color = Region),size = 3) + facet_grid(Region ~.) + stat_smooth() + coord_cartesian(xlim = c(0.75,1))
#Themes
#ggthemes package
sc + geom_point(aes(color = Region), size=3)  + stat_smooth() + theme_minimal()
# Excellent for numeric data especially if it is continous data(frequencies)
# bins- range of values, bucket
library(tidyverse)
titanic <- read.csv("D:\\Study\\R\\WorkingDirectory\\titanic.csv", stringsAsFactors = F)
titanic <- as.tibble(titanic)
titanic
str(titanic)
titanic$Survived <- as.factor(titanic$Survived)
titanic$Pclass <- as.factor(titanic$Pclass)
titanic$Sex <- as.factor(titanic$Sex)
titanic$Embarked <- as.factor(titanic$Embarked)
titanic
hist <- ggplot(data = titanic, aes(x=Age))
hist + geom_histogram(binwidth = 5)
hist + geom_histogram(binwidth = 5, color = "darkslategray", fill="darkslategray4", alpha = 0.5)+ ggtitle("Age Distribution on the Titanic")+ labs(y = "Number of Passangers", x = "Age") + theme_minimal()
#practice
employee <- read.csv("D:\\Study\\R\\WorkingDirectory\\employee-data.csv", stringsAsFactors = F, skip=23)
employee
employee <- as.tibble(employee)
head(employee)
emp <- filter(employee, salary > 45000)
emp
hist <- ggplot(emp, aes(x=salary))
hist
#library(ggthemes)
hist + geom_histogram()
hist + geom_histogram(binwidth = 20000, color = "darkslategray", fill = "darkseagreen2", alpha=0.5) + labs( y = "Number of Employees", x= "Salary", title = "Salary Distribution") + theme_light()
ggsave("D:\\Study\\R\\WorkingDirectory\\plot.png", width = 5, height = 5)
getOption("repos")
getOption("repos")
options(repos = c(CRAN = "https://cran.rstudio.com"))
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
summary(cars)
summary(cars)
library(devtools)
install_github('viking/r-yaml')
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
library(devtools)
install_github('viking/r-yaml')
library(tidyverse)
billboard <- read.csv("D:\\Study\\R\\WorkingDirectory\\billboard.csv")
billborad <- as.tibble(billboard)
billboard
billboard.a <- billboard %>%
gather(x1st.week:x76th.week, key = "Week", value="Rank") %>%
arrange(artist.inverted)
billboard <- read.csv("D:\\Study\\R\\WorkingDirectory\\billboard.csv")
billborad <- as.tibble(billboard)
billboard
head(billboard,2)
billboard.a <- billboard %>%
gather(x1st.week:x76th.week, key = "Week", value="Rank") %>%
arrange(artist.inverted)
head(billboard.a)
tb <- read.csv("D:\\Study\\R\\WorkingDirectory\\tb.csv")
tb
tb <- as.tibble(tb)
head(tb)
tb.gathered <- tb %>%
gather(m.014:f.65, key="column" ,value = "Cases" , na.rm = T) %>%
arrange(country)
tb.gathered
top_n(tb.gathered,n = 10)
tb.separated <- tb.gathered %>%
separate(column, into = c("sex", "age"))
tb.separated
tb.separated$age <- str_replace_all(tb.separated$age,"0","0-")
tb.separated$age <- str_replace_all(tb.separated$age,"15","15-")
tb.separated$age <- str_replace_all(tb.separated$age,"25","25-")
#tb.separated
str_replace_all?
tb.separated$age <- str_replace_all(tb.separated$age,"0","0-")
#tb.separated
install.packages("stringr")
install.packages("stringr")
#tb.separated
#install.packages("stringr")
str_replace_all?
tb.separated$age <- str_replace_all(tb.separated$age,"0","0-")
#tb.separated
#install.packages("stringr")
library(stringr)
str_replace_all?
tb.separated$age <- str_replace_all(tb.separated$age,"0","0-")
tb.separated$age <- str_replace_all(tb.separated$age,"15","15-")
tb.separated$age <- str_replace_all(tb.separated$age,"25","25-")
tb.separated$age <- str_replace_all(tb.separated$age,"35","35-")
tb.separated$age <- str_replace_all(tb.separated$age,"45","45-")
tb.separated$age <- str_replace_all(tb.separated$age,"55","55-")
tb.separated$age <- str_replace_all(tb.separated$age,"65","65-100")
tb.separated
###ggplot2. dplyr
library(tidyverse)
hdi <- read.csv("D:\\Study\\R\\WorkingDirectory\\hdi-cpi.csv", stringsAsFactors = F)
hdi <- as.tibble(hdi)
hdi
sc <- ggplot(hdi)
sc <- ggplot(hdi, aes(CPI.2015, HDI.2015))
sc
sc + geom_point()
sc + geom_point() + facet_grid(Region ~.)
# apply statitics- (Tranforming and summarizing the data)
sc + geom_point(aes(color = Region), size=3) + facet_grid(Region ~.) + stat_smooth()
# Cooridinates -specifying the dimension of a graph(Zooming in - out)
# eg:-see the only countries in the upper limit of crime index(CPI)
sc + geom_point(aes(color = Region),size = 3) + facet_grid(Region ~.) + stat_smooth() + coord_cartesian(xlim = c(0.75,1))
#Themes
#ggthemes package
sc + geom_point(aes(color = Region), size=3)  + stat_smooth() + theme_minimal()
# Excellent for numeric data especially if it is continous data(frequencies)
# bins- range of values, bucket
library(tidyverse)
titanic <- read.csv("D:\\Study\\R\\WorkingDirectory\\titanic.csv", stringsAsFactors = F)
titanic <- as.tibble(titanic)
titanic
str(titanic)
titanic$Survived <- as.factor(titanic$Survived)
titanic$Pclass <- as.factor(titanic$Pclass)
titanic$Sex <- as.factor(titanic$Sex)
titanic$Sex <- as.factor(titanic$Sex)
titanic$Embarked <- as.factor(titanic$Embarked)
titanic
hist <- ggplot(data = titanic, aes(x=Age))
hist + geom_histogram(binwidth = 5)
hist + geom_histogram(binwidth = 5, color = "darkslategray", fill="darkslategray4", alpha = 0.5)+ ggtitle("Age Distribution on the Titanic")+ labs(y = "Number of Passangers", x = "Age") + theme_minimal()
hist + geom_histogram(binwidth = 5, color = "darkslategray", fill="darkslategray4", alpha = 0.5)+
ggtitle("Age Distribution on the Titanic")+
labs(y = "Number of Passangers", x = "Age") + theme_minimal()
hist + geom_histogram(binwidth = 5, color = "red", fill="darkslategray4", alpha = 0.5)+
ggtitle("Age Distribution on the Titanic")+
labs(y = "Number of Passangers", x = "Age") + theme_minimal()
hist + geom_histogram(binwidth = 5, color = "red", fill="darkslategray4", alpha = 0.5)+
# ggtitle("Age Distribution on the Titanic")+
labs(y = "Number of Passangers", x = "Age", title ="Age Distribution on the Titanic") + theme_minimal()
### bar chart
library(tidyverse)
titanic <- read.csv("D:\\Study\\R\\WorkingDirectory\\titanic.csv", stringsAsFactors = F)
titanic <- as.tibble(titanic)
titanic
titanic$Survived <- as.factor(titanic$Survived)
titanic$Pclass <- as.factor(titanic$Pclass)
titanic$Sex <- as.factor(titanic$Sex)
titanic$Embarked <- as.factor(titanic$Embarked)
titanic
bar <- ggplot(titanic, aes(x=Survived))
bar + geom_bar() + theme_light() +
labs(y = "Passenger Count", Title="Survival Rate on Titanic")
### Survived and not survivd should appear deifferent color
bar <- ggplot(titanic, aes(x=Survived, fill=Survived))
bar + geom_bar() + theme_light() +
labs(y = "Passenger Count", Title="Survival Rate on Titanic")
bar <- ggplot(titanic, aes(x=Survived, fill=Sex))
bar + geom_bar() + theme_light() +
labs(y = "Passenger Count", Title="Survival Rate on Titanic")
bar <- ggplot(titanic, aes(x=Sex, fill=Survived))
bar + geom_bar() + theme_light() +
labs(y = "Passenger Count",X= "Gender", Title="Survival Rate by Gender")
titanic
bar <- ggplot(titanic, aes(x=Sex, fill=Survived))
bar + geom_bar() + theme_light() +
labs(y = "Passenger Count",X= "Gender", Title="Survival Rate by Gender") + facet_wrap(~ Pclass)
bar <- ggplot(titanic, aes(x=Sex, fill=Survived))
library(tidyverse)
titanic <- read.csv("D:\\Study\\R\\WorkingDirectory\\titanic.csv", stringsAsFactors = F)
titanic <- as.tibble(titanic)
titanic
titanic$Survived <- as.factor(titanic$Survived)
titanic$Pclass <- as.factor(titanic$Pclass)
titanic$Sex <- as.factor(titanic$Sex)
titanic$Embarked <- as.factor(titanic$Embarked)
titanic
box <- ggplot(titanic, aes(y=Age, x = Survived, fill=Sex))  # inherit.Aes=False
box + geom_boxplot() +
labs(title = "Survival Rate on Titanic based on Age") +
theme_fivethirtyeight()
box <- ggplot(titanic, aes(y=Age, x = Survived, fill=Sex))  # inherit.Aes=False
box + geom_boxplot() +
labs(title = "Survival Rate on Titanic based on Age") +
theme_fivethirtyeight()
box <- ggplot(titanic, aes(y=Age, x = Survived, fill=Sex))  # inherit.Aes=False
box + geom_boxplot() +
labs(title = "Survival Rate on Titanic based on Age") +
theme_light()
## To flip
box <- ggplot(titanic, aes(y=Age, x = Survived))
box + geom_boxplot(outlier.colour = "red", outlier.shape = 4) + geom_jitter(width = 0.2, aes(color=Sex)) +
labs(title = "Survival Rate on Titanic based on Age and Gender") +    theme_fivethirtyeight() + coord_flip()
labs(title = "Survival Rate on Titanic based on Age and Gender") +
theme_light()
#or
box <- ggplot(titanic, aes(y=Age, x = Survived))
box + geom_boxplot() + geom_jitter(width = 0.2, aes(color=Sex))
labs(title = "Survival Rate on Titanic based on Age and Gender") +
theme_light()
box <- ggplot(titanic, aes(y=Age, x = Survived, fill=Sex))  # inherit.Aes=False
box + geom_boxplot() +
labs(title = "Survival Rate on Titanic based on Age") +
theme_light()
#or
box <- ggplot(titanic, aes(y=Age, x = Survived))
box + geom_boxplot() + geom_jitter(width = 0.2, aes(color=Sex))
labs(title = "Survival Rate on Titanic based on Age and Gender") +
theme_light()
## To flip
box <- ggplot(titanic, aes(y=Age, x = Survived))
box + geom_boxplot(outlier.colour = "red", outlier.shape = 4) + geom_jitter(width = 0.2, aes(color=Sex)) +
labs(title = "Survival Rate on Titanic based on Age and Gender") +    theme_fivethirtyeight() + coord_flip()
#or
box <- ggplot(titanic, aes(y=Age, x = Survived))
box + geom_boxplot() + geom_jitter(width = 0.2, aes(color=Sex), alpha=0.5)
labs(title = "Survival Rate on Titanic based on Age and Gender") +
theme_light()
#or
box <- ggplot(titanic, aes(y=Age, x = Survived))
box + geom_boxplot() + geom_jitter(width = 0.2, aes(color=Sex), alpha=0.5)
box <- ggplot(titanic, aes(y=Age, x = Survived, fill=Sex))  # inherit.Aes=False
box + geom_boxplot() +
labs(title = "Survival Rate on Titanic based on Age") +
theme_light()
#or
box <- ggplot(titanic, aes(y=Age, x = Survived))
box + geom_boxplot() + geom_jitter(width = 0.2, aes(color=Sex), alpha=0.5)
labs(title = "Survival Rate on Titanic based on Age and Gender") +
theme_light()
## To flip
box <- ggplot(titanic, aes(y=Age, x = Survived))
box + geom_boxplot(outlier.colour = "red", outlier.shape = 4) + geom_jitter(width = 0.2, aes(color=Sex)) +
labs(title = "Survival Rate on Titanic based on Age and Gender") +    theme_fivethirtyeight() + coord_flip()
## To flip
box <- ggplot(titanic, aes(y=Age, x = Survived))
box + geom_boxplot(outlier.colour = "red", outlier.shape = 4) + geom_jitter(width = 0.2, aes(color=Sex)) +
labs(title = "Survival Rate on Titanic based on Age and Gender") +    theme_classic() + coord_flip()
emp <- read.csv("D:\\Study\\R\\WorkingDirectory\\employee-data.csv", stringsAsFactors = F, skip=23)
## or
library(tidyverse)
library(ggthemes)
install.packages("wesanderson")
library(wesanderson)
#install.packages("wesanderson")
library(wesanderson)
boxx <- ggplot(emp.a, aes(x = title, y = salary))
my.bp <- boxx + geom_boxplot(outlier.color = "orangered1", outlier.shape = 3) +
geom_jitter(width = 0.3, aes(color = gender)) +
ggtitle("Salary distribution", subtitle = "based on position and gender") +
ylab("Salary") + xlab("Job position") +
theme_economist_white() +
theme(legend.position = "right", axis.text.x = element_text(angle = 90, hjust = 1)) +
coord_flip() # this can be added if the axis.text.x doesn't make sense to you; it's also easier to read
my.bp
emp.a
my.bp
my.bp <- boxx + geom_boxplot(outlier.color = "orangered1", outlier.shape = 3) +
geom_jitter(width = 0.3, aes(color = gender)) +
ggtitle("Salary distribution", subtitle = "based on position and gender") +
ylab("Salary") + xlab("Job position")
my.bp
hdi <- read.csv("D:\\Study\\R\\WorkingDirectory\\hdi-cpi.csv")
hdi <- read.csv("D:\\Study\\R\\WorkingDirectory\\hdi-cpi.csv")
hdi <- as.tibble(hdi)
hdi
library(tidyverse)
scat <- ggplot(hdi,aes(x=CPI.2015,y=HDI.2015))
scat + geom_point(aes(color=Region)) + theme_light() +
labs(x="Corruption Perception Index,2015",
y = "Human Development Index,2015",
title="Corruption and Human Development")# + ggtitle("Corruption and Human Development")
### to know the shapes google- ggplot2 shapes
scat + geom_point(aes(color=Region), shape=21, fill = "white", size=3, stroke=2) + theme_light() +
labs(x="Corruption Perception Index,2015",
y = "Human Development Index,2015",
title="Corruption and Human Development")# + ggtitle("Corruption and Human Development")
scat + geom_point(aes(color=Region), shape=21, fill = "white", size=3, stroke=2) + theme_light() +
labs(x="Corruption Perception Index,2015",
y = "Human Development Index,2015",
title="Corruption and Human Development")+
stat_density2d()
# 1 Mean:- average
library(tidyverse)
ny <- c(1,2,2,4,5,6,7,8,11,66)
la <- c(2,4,5,6,1,23,4,5,6,25)
pizza <- data.frame(ny,la)
mean(pizza$ny)
mean(pizza$la)
# Median:- middle number of the dataset
median(pizza$ny)
median(pizza$la)
# Mode:- majority of occurence
# to calculate mode- there is no starigh function
# we create a contingency table
xNY <- table(pizza$ny)
xNY
pizza$ny
# Mode:- majority of occurence
# to calculate mode- there is no starigh function
# we create a contingency table
xNY <- table(pizza$ny)
ble(pizza$ny)
ble(pizza$ny)
xNY
?table
names(xNY)[which(xNY==max(xNY))]
xNY
pizza$ny
# Mode:- majority of occurence
# to calculate mode- there is no starigh function
# we create a contingency table
xNY <- table(pizza$ny)
xNY
names(xNY)[which(xNY==max(xNY))]
summary(pizza)
col.1 <- c(1,1,1,1,2,2,2,2,2,2,3,3,3,3,4,4,5,5,7)
col.2 <- c(1,1,2,2,3,3,3,4,4,4,4,4,5,5,5,6,6,7,7)
col.3 <- c(1,2,3,3,4,4,4,5,5,5,5,6,6,6,6,6,6,7,7)
df <- data.frame(col.1,col.2,col.3)
df
summary(df)
#histogram of all 3
h1 <- ggplot(df,aes(x=col.1)) +
geom_histogram(binwidth = 1,color="white", fill="red4") +
theme_light()
h2 <- ggplot(df,aes(x=col.2)) +
geom_histogram(binwidth = 1,color="white", fill="red4") +
theme_light()
h3 <- ggplot(df,aes(x=col.3)) +
geom_histogram(binwidth = 1,color="white", fill="red4") +
theme_light()
h2
h3
h1   #-- Positive Skewness- Right skew
h2
h3
h1   #-- Positive Skewness- Right skew
h2
h3
####  Excercise  #####
sk1 <- read.csv("D:\\Study\\R\\WorkingDirectory\\skew-1.csv")
sk2 <- read.csv("D:\\Study\\R\\WorkingDirectory\\skew-2.csv")
sk1 <- data.frame(sk1)
sk2 <- data.frame(sk2)
sk1
sk2
sk<- data.frame(sk1,sk2)
sk
colnames(sk) <- c("sk1","sk2")
sk
top_n(sk,2)
summary(sk)
his1 <- ggplot(sk, aes(sk1))
his1 + geom_histogram(binwidth = 100) + theme_light()
his2 <- ggplot(sk, aes(sk2))
his2 + geom_histogram(binwidth = 100) + theme_light()
ny <- c(1,2,3,4,5,6,7,8,9,11)
la <- c(1,2,3,4,5,6,7,8,9,10)
pizza <- data.frame(ny,la)
pizza
lapply(pizza,mean)
sapply(pizza,mean)
sapply(pizza,var)
sapply(pizza,sd)
coef.var <- sapply(pizza,sd)/sapply(pizza,mean)
coef.var
land <- read.csv("D:\\Study\\R\\WorkingDirectory\\landdata-states.csv", stringsAsFactors = F)
pizza
lapply(pizza,mean)
sapply(pizza,mean)
sapply(pizza,var)
sapply(pizza,sd)
coef.var <- sapply(pizza,sd)/sapply(pizza,mean)
coef.var
land <- read.csv("D:\\Study\\R\\WorkingDirectory\\landdata-states.csv", stringsAsFactors = F)
land <- as.tibble(land)
top_n(land,2)
land %>% subset(Date==2010) %>% ggplot(aes(x=log(Land.Value), y =Structure.Cost)) +
geom_point() + theme_light() + labs(x="Land Value",
y ="Structural Cost",
title = "Relation between land value and structural cost")
cor(land$Land.Value, land$Structure.Cost)
cor.test(land$Structure.Cost, land$Land.Value)
prod <- read.csv("D:\\Study\\R\\WorkingDirectory\\practical-product.csv", stringsAsFactors = F)
cust <- read.csv("D:\\Study\\R\\WorkingDirectory\\practical-customer.csv", stringsAsFactors = F)
prod <- as.tibbe(prod)
head(prod,2)
cust <- as.tibble(cust)
head(cust,2)
select(cust,"Customer.ID","Mortgage",everything())
colnames(cust)
colnames(prod)
hisProd <- ggplot(prod,aes(Price))
hisProd + geom_histogram() + theme_light()
hisProd + geom_histogram(binwidth = 100000) + theme_light()
# or
hisProd + geom_histogram(binwidth = 100000,
color = "darkslategray",
fill = "darkslategray4",
alpha = 0.5) +
ggtitle("House Prices Frequency Distribution") +
labs(y = "Number of Houses",
x = "Price") +
theme_minimal() #+
sp <- ggplot(prod, aes(x=Area..ft.., Price))
sp + geom_point() +
theme_light() +
labs(x = "Area in Square Feet",
y = "Price in USD",
title = "Relationship between Price and Area")
# task 5
summary(prod$Price)
sd(prod$Price)
mod <- function(x){
tab <- table(x)
tab.Max <- max(tab)
if(all(tab == tab.Max))
mod <- NA
else if(is.numeric(x))
{
mod <- as.numeric(names(tab[tab == tab.Max]))
}
else
{
mod <- names(tab[tab == tab.Max])
}
return (mod)
}
mod(prod$Price)
test <- c(1,2,3,4,4,5,6,7,8,9,2,3,4,5,6,3)
mod(test)
sal <- read.csv("D:\\Study\\R\\WorkingDirectory\\ztest-a.csv")
head(sal,2)
summary(sal)
z.test <- function(a, mu, sd){
zeta = (mean(a)- mu)/ (sd/sqrt(length(a)))
return (zeta)
}
z.test(sal$salary, 113000, 15000)
z.test <- function(a, mu, sd){
zeta = (mean(a)- mu)/ (sd/sqrt(length(a)))
return (zeta)
}
sal$salary
z.test(sal$salary, 113000, 15000)
qnorm(0.975)
#e.g
depppl <- read.csv("D:\\Study\\R\\WorkingDirectory\\dependent-samples.csv") # load your data
depppl
summary(depppl) # understand your data
library(pastecs)
library(pastecs)
dep.test <- t.test(depppl$Before,depppl$After, paired = T, alternative = "l")
dep.test
stat.desc(depppl)   # need to understand each term
