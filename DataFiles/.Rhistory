my.book[4]
my.book[[4]]
my.book[[4]][2]
my.book[[4]][[2]]
3==3
"one" == "one"
"one" == "ONE"
TRUE == TRUE
TRUE == T
TRUE > FALSE
"rat" > "cat"
FALSE & FALSE
!TRUE
v <- c(1,3,5,7)
w <- c(1,2,3,4)
3== v
3 == w
w == v
v >= w
w >= v
s <- c(3,1,2,5)
(s > 4) & (s > 2)
(s > 4) && (s > 2)
(s < 4) && (s > 2)
source('~/.active-rstudio-document', echo=TRUE)
source('D:/Study/R/Repo/Loops.R', echo=TRUE)
n <- -10
while(n < 0)
{
print(paste("The no is:- ", n))
n <- n+1
}
?paste
x <- -10
repeat {
print(paste("No is :- ",n))
n <- n+1
if(n >= 0)
{
print("Its done")
break
}
}
x <- -10
repeat {
print(paste("No is :- ",n))
x <- x+1
if(x >= 0)
{
print("Its done")
break
}
}
x <- -10
repeat {
print(paste("No is :- ",x))
x <- x+1
if(x >= 0)
{
print("Its done")
break
}
}
for( i in 22:43)
{
print(paste("I is :- ",i))
}
deck <- c("Duke","Assasin","Captian","Ambassador","Contessa")
draw <- function(deck){
hand <- sample(deck, size = 3, replace = T)
print(h)
}
draw(deck)
deck <- c("Duke","Assasin","Captian","Ambassador","Contessa")
draw <- function(deck){
hand <- sample(deck, size = 3, replace = T)
print(hand)
}
draw(deck)
draw(deck)
deck1 <- matrix(rep(c("Duke","Assasin","Captian","Ambassador","Contessa"),3),ncol = 1)
deck1
draw(deck)
draw(deck1)
draw(deck1)
draw <- function(deck){
hand <- sample(deck, size = 3, replace = F)
print(hand)
}
draw(deck1)
draw(deck1)
draw(deck1)
deck1
drawTop3 <- function(deck){
hand <- deck[1:3]
print(hand)
}
drawTop3(deck1)
drawTop3(deck1)
random <- sample(1:23, size = 23)
random
random
random
shuffle <- function(deck){
random <- sample(1:23, size = 23)
deck.s <- deck[random, drop = F]
print(deck.s)
}
shuffle(deck1)
shuffle <- function(deck){
random <- sample(1:15, size = 15)
deck.s <- deck[random, drop = F]
print(deck.s)
}
shuffle(deck1)
shuffle(deck1)
shuffle(deck1)
shuffle <- function(deck){
random <- sample(1:15, size = 15)
deck.s <- deck[random, drop = F]
return deck.s
}
shuffle <- function(deck){
random <- sample(1:15, size = 15)
deck.s <- deck[random, drop = F]
return (deck.s)
}
drawTop3Final <- function(deck){
shuffled <- shuffle(deck)
hand <- shuffled[1:3,]
return (hand)
}
drawTop3Final(deck1)
shuffle <- function(deck){
random <- sample(1:15, size = 15)
deck.s <- deck1[random, drop = F]
return (deck.s)
}
drawTop3Final(deck1)
print(shuffle(deck1))
drawTop3Final <- function(deck){
shuffled <- shuffle(deck)
hand <- shuffled[1:3]
return (hand)
}
drawTop3Final(deck1)
drawTop3Final(deck1)
drawTop3Final(deck1)
f <- function(x) {
f <- function(x) {
f <- function(x) {
x ^ 2
}
f(x) + 1
}
f(x) * 2
}
f(10)
source('~/.active-rstudio-document', echo=TRUE)
my.data
my.data
title <- c("DDLJ","Sholay","RDB")
year <- c(1975,1956,1998)
length <- c(180,212,140)
box.office <- (234,456,126)
my.data <- data.frame(title, year, length, box.office)
my.data
my.data <- data.frame(title, year, length, box.office)
my.data
title <- c("DDLJ","Sholay","RDB")
year <- c(1975,1956,1998)
length <- c(180,212,140)
box.office <- (234,456,126)
my.data <- data.frame(title, year, length, box.office)
my.data
title <- c("DDLJ","Sholay","RDB")
year <- c(1975,1956,1998)
length <- c(180,212,140)
box.office <- (234,456,126)
my.data <- data.frame(title, year, length, box.office)
title <- c("DDLJ","Sholay","RDB")
year <- c(1975,1956,1998)
length <- c(180,212,140)
box.office <- c(234,456,126)
my.data <- data.frame(title, year, length, box.office)
my.data
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
#rename columns
names(my.data) <- c("Movie", "Release Year","Duration", "Box Office")
my.data
#or
my.data <- data.frame(Movie = title, Release = year, Length= length, Gross = box.office)
my.data
str(my.data)
?data.frame
box.office1 <- c(234,456)
my.data1 <- data.frame(title, year, length, box.office1)
my.data1 <- data.frame(title, year, length, box.office1, check.rows = F)
L3 <- LETTERS[1:3]
L3
fac <- sample(L3, 10, replace = TRUE)
fac
(d <- data.frame(x = 1, y = 1:10, fac = fac))
## The "same" with automatic column names:
data.frame(1, 1:10, sample(L3, 10, replace = TRUE))
small <- letter[1:3]
small
small <- letters[1:3]
small
is.data.frame(d)
(my.data1 <- data.frame(title, year, length, box.office1))
name <- c("Flipper", "Bromley", "Nox", "Orion", "Dagger", "Zizi", "Carrie")
mo <- c(53, 19, 34, 41, 84, 140, 109)
size <- c("medium", "small", "medium", "large", "small", "extra small", "large")
weight <- c(21, 8, 4, 6, 7, 2, 36)
breed <- c("dog", "dog", "cat", "cat", "dog", "cat", "dog")
pets <- data.frame(mo, size, weight, breed)
pets
names(pets) <- c("Months old", "Size", "Weight", "Breed")
pets
rownames(pets) <- name
pets
pets <- data.frame(row.names = name, "Months old" = mo, "Size" = size, "Weight" = weight, "Breed" = breed)
pets
levels(pets[, "Breed"]) <- c("dog", "cat")
pets
##### tidyverse package
intall.packge(tidyverse)
##### tidyverse package
intall.package(tidyverse)
##### tidyverse package
intall.packages(tidyverse)
intall.packages(tidyverse)
##### tidyverse package
install.packages(tidyverse)
##### tidyverse package
install.packages("tidyverse"")
##### tidyverse package
install.packages("tidyverse")
install.packages("tidyverse")
### know the working directory
getwd()
setwd("D:\Study\R\WorkingDirectory")
setwd("D:\\Study\\R\\WorkingDirectory")
getwd()
data <- read.csv("pokRdex-comma.csv", sep = , header = TRUE, stringsAsFactors = F)
data
data <- table("pokRdex-comma.csv", sep = , header = TRUE, stringsAsFactors = F)
data
data <- table.read("pokRdex-comma.csv", sep = , header = TRUE, stringsAsFactors = F)
data
data.csv <- read.csv("pokRdex-comma.csv", stringsAsFactors = F)
data.csv
data.csv <- read.csv("pokRdex-comma.csv", stringsAsFactors = F, skip = 10, nrows = 20)
data.csv
data.csv <- read.csv("pokRdex-comma.csv", stringsAsFactors = F,  nrows = 20)
data.csv
data.tab <- read.delim("pokRdex-tab", sep="\t")
data.tab <- read.delim("pokRdex-tab.txt", sep="\t")
data.tab
data.tab <- read.delim("pokRdex-tab.txt", sep="\t", nrows = 10)
data.tab
title <- c("DDLJ","Sholay","RDB")
year <- c(1975,1956,1998)
length <- c(180,212,140)
box.office <- c(234,456,126)
my.data <- data.frame(title, year, length, box.office)
my.data
write.csv("Movie.csv", row.names = F)
(read.csv("Movie.csv"))
write.csv(my.data, file="Movie.csv", row.names = F)
(read.csv("Movie.csv"))
write.table(my.data, file="Movie_Tab.txt", sep = "\t")
(read.table("Movie_Tab.txt", sep="\t"))
emp.data <- read.csv("employee-data.csv", nrows = 200, stringsAsFactors = F)
emp.data
emp.data <- read.csv("employee-data.csv", skip = 23, nrows = 200, stringsAsFactors = F)
emp.data
str(emp.data)
emp.data <- read.csv("employee-data.csv", skip = 23, nrows = 200, stringsAsFactors = F, row.names = "Employees Number","First name","Last name","Birth Date","Gender","Job Title","Salary","From Date","To Date")
emp.data <- read.csv("employee-data.csv", skip = 23, nrows = 200, stringsAsFactors = F, row.names = c("Employees Number","First name","Last name","Birth Date","Gender","Job Title","Salary","From Date","To Date")
emp.data <- read.csv("employee-data.csv", skip = 23, nrows = 200, stringsAsFactors = F, row.names = "Employees Number","First name","Last name","Birth Date","Gender","Job Title","Salary","From Date","To Date")
emp.data
emp.data <- read.csv("employee-data.csv", skip = 23, nrows = 200, stringsAsFactors = F, row.names = "Employees Number","First name","Last name","Birth Date","Gender","Job Title","Salary","From Date","To Date")
emp.data <- read.csv("employee-data.csv", skip = 23, nrows = 200, stringsAsFactors = F)
names(emp.data) <- c( "Employees Number","First name","Last name","Birth Date","Gender","Job Title","Salary","From Date","To Date")
emp.data
write.csv(emp.data, "Employee_Export.csv", row.names = F)
(read.csv("Employee_Export.csv"))
### sense of data
nrow(emp.data)
ncol(emp.data)
colnames(emp.data)
rownames(emp.data)
summar(emp.data)
summary(emp.data)
data()
library(tidyverse)
starwars
my.wars <- as.data.frame(starwars)
my.wars <- my.wars[, -(11:13)]
my.wars
head(my.wars)
tail(my.wars)
my.wars[3,9]
#or
my.wars[3,"homeworld"]
my.wars[5,]
head(my.wars[,1])
head(my.wars[[,1]])
head(my.wars[["name"]])
head(my.wars$name)
head(my.wars["name"])
my.wars(c(1:10),c("name","homeworld"))
my.wars[c(1:10),c("name","homeworld")]
head(my.wars[["name"]])
head(my.wars["name"])
my.data
opinion <- c("Hit","Flop","Hit")
my.data <- cbind(my.data, opinion)
my.data
my.data$opinion =NULL
my.data
#or
my.data$opinion <- opinion
my.data
#### adding observation/row in the data frame
movSultan <- data.frame(title="Sultan",year=2017,length=180,box.office=500, opinion="Flop")
rbind(my.data,movSultan)
name <- c("Flipper", "Bromley", "Nox", "Orion", "Dagger", "Zizi", "Carrie")
mo <- c(53, 19, 34, 41, 84, 140, 109)
size <- c("medium", "small", "medium", "large", "small", "extra small", "large")
weight <- c(21, 8, 4, 6, 7, 2, 36)
breed <- c("dog", "dog", "cat", "cat", "dog", "cat", "dog")
pets <- data.frame(mo, size, weight, breed)
names(pets) <- c("Months old", "Size", "Weight", "Breed")
rownames(pets) <- name
pets
vaccinated <- c("Yes","Yes","No","Yes","No","Yes","No")
pets <- cbind(pets,vaccinated)
pets
milo <- data.frame(row.names = "Milo", "Months old" = 67,  "Size" = "small", "Weight" = 7, "Breed" = "dog", "vaccinated" = "yes" )
pets <- rbind(pets, milo)
milo
names(milo) <- c("Milo")
pets
milo
pets <- rbind(pets, milo)
milo <- data.frame("Months old" = 67,  "Size" = "small", "Weight" = 7, "Breed" = "dog", "vaccinated" = "yes" )
milo
names(milo) <- c("Milo")
milo
milo <- NULL
milo
milo <- data.frame("Months old" = 67,  "Size" = "small", "Weight" = 7, "Breed" = "dog", "vaccinated" = "yes" )
milo
names(milo) <- c("Milo")
milo
milo <- NULL
milo <- data.frame("Months old" = 67,  "Size" = "small", "Weight" = 7, "Breed" = "dog", "vaccinated" = "yes" )
milo
milo <- null
milo <- NULL
milo <- data.frame(7, "small",  7, dog",  "yes" )
milo <- data.frame(c(7, "small",7, dog","yes"))
milo.data <- c(7, "small",7, dog","yes")
milo <- data.frame(c(7, "small",7, dog","yes"))
milo <- NULL
milo <- data.frame(Months.old = 67,  Size = "small", Weight = 7, Breed = "dog", vaccinated = "yes" )
#milo <- NULL
milo
rownames(milo) <- c("Milo")
milo
pets
pets <- rbind(pets, milo)
milo <- NULL
milo <- data.frame("Months. old" = 67,  Size = "small", Weight = 7, Breed = "dog", vaccinated = "yes" )
#milo <- NULL
milo
milo <- NULL
milo <- data.frame("Months old" = 67,  Size = "small", Weight = 7, Breed = "dog", vaccinated = "yes" )
#milo <- NULL
milo
rownames(milo) <- c("Milo")
milo
pets
pets <- rbind(pets, milo)
milo <- NULL
milo <- data.frame(67,"small",7,"dog","yes" )
#milo <- NULL
milo
rownames(milo) <- c("Milo")
milo
pets
pets <- rbind(pets, milo)
milo <- NULL
milo <- NULL
milo <- data.frame(row.names = "Milo", Months.old = 67, Size = "small", Weight = 7, Breed = "dog", Vaccinated = "Yes")
pets <- rbind(pet, milo)
pets <- rbind(pets, milo)
pets
ncol(pets)
nrow(pets)
colnames(pets)
rownames(pets)
str(pets)
class(dimaonds)
class(diamonds)
is.data.frame(diamonds)
diamonds
UsJudgeRatings
str(USJudgeRatings)
UsJudgeRatings
is.data.frame(USJudgeRatings)
USJudgeRatings
my.df$AVRG <- rowMeans(my.df)
my.df <- USJudgeRatings
my.df$AVRG <- rowMeans(my.df)
my.df
avrg <- my.df["AVRG"]
headavrg
avrg
eg.na <- c(NA,1:10)
eg.na
(mean(eg.na))
(mean(eg.na, na.rm = T))
is.na(eg.na)
wars
my.wars
is.na(my.wars)
any(is.na(my.wars))
any(is.na(my.wars$name))
my.wars
my.wars$species
is.na(my.wars$species)
my.wars$species[(is.na(my.wars$species))] <- "Unknown"
my.wars$species
subset(my.wars, species = "Unknown")
subset(my.wars, species == "Unknown")
library((tidyverse))
startwars
starwars
star <- starwars
star
View(star)
(filter(star, species == "Droid"))
(filter(star, species == "droid"))
D
(filter(star, species == "Droid"))
(filter(star, species=="Droid", homeworld =="Tatooine"))
(filter(star, eye_color == "red" | eye_color == "yellow"))
select(star, name, birth_year,homeworld,species,starships)
select(star,names,birth_year,homeworl:starships)
select(star,names,birth_year,homeworld:starships)
select(star,name,birth_year,homeworld:starships)
select(star,ends_with("color"))
select(star,name,everything())
### Mutate and transmute
star <- mutate(star, bmi= mass/((height/100)^2))
select(star, name:bmi)
star.tran <- transmute(star, bmi= mass/((height/100)^2))
star.tran
arrange(star, desc(mass))
summarize(star, avg.height = mean(height, na.rm = T))
star.species <- group_by(star, species)
star.species
summarize(star.species, avg.height = mean(height, na.rm = T))
>deplyr
sample_n(star,10)
sample_n(star,10,replace = T)
sample_frac(star,0.1)
filter(summarize(group_by(star,species),count = n(), avg.mass = mean(mass, na.rm=T)), count >1)
star%>%
group_by(species)%>%
summarise(count =n(), avg.mass = mean(mass,a.rm=T))%>%
filter(count > 1)
star %>%
group_by(species) %>%
summarise(count =n(), avg.mass = mean(mass,a.rm=T))%>%
filter(count > 1)
filter(summarize(group_by(star,species),count = n(), avg.mass = mean(mass, na.rm=T)), count >1)
star %>%
group_by(species) %>%
summarise(count =n(), avg.mass = mean(mass, na.rmT))%>%
filter(count > 1)
star %>%
group_by(species) %>%
summarise(count =n(), avg.mass = mean(mass, na.rm=T)) %>%
filter(count > 1)
employee.data <- read.csv("D:\\Study\\R\\WorkingDirectory\\employee_data.csv", skip = 23, stringsAsFactors = FALSE)
employee.data <- read.csv("D:\\Study\\R\\WorkingDirectory\\employee-data.csv", skip = 23, stringsAsFactors = FALSE)
employee.data
employee.data <- as.tibble(employee.data)
employee.data
employee.data
employee.data$gender <- as.factor(employee.data$gender)
employee.data$title <- as.factor(employee.data$title)
any(is.na(employee.data))
employee.a <- employee.data %>%
select(ends_with("name"), gender, everything()) %>%
filter(salary >= 70000) %>%
arrange(gender, last_name)
employee.a
good.earners <- employee.a["emp_no"]
good.earners
employee.b <- employee.data %>%
group_by(title, gender) %>%
summarise(avg.salary = mean(salary)) %>%
mutate(monthly = avg.salary/12) %>%
arrange(gender, desc(monthly))
employee.b
